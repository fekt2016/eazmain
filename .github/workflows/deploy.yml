name: üöÄ FTP Deployment to cPanel
on:
  push:
    branches: [main]

jobs:
  deploy:
    name: üéâ Deploy to Production
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://eazworld.com

    steps:
      - name: üöö Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ‚éî Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: "npm"

      - name: üì¶ Install dependencies
        run: |
          npm ci
          echo "Dependencies installed successfully"

      - name: üèóÔ∏è Build project
        run: |
          npm run build
          echo "Build completed"

      - name: üìã Verify build output
        run: |
          echo "Build directory contents:"
          ls -la dist/
          echo ""
          echo "JavaScript files:"
          find dist/ -name "*.js" | head -10
          echo ""
          echo "Directory structure:"
          find dist/ -type d | sort
          echo ""
          echo "Total size:"
          du -sh dist/

      - name: üîí Verify environment secrets
        run: |
          echo "Verifying FTP secrets..."
          if [ -z "${{ secrets.FTP_SERVER }}" ]; then
            echo "::error::FTP_SERVER secret is missing!"
            exit 1
          fi
          if [ -z "${{ secrets.FTP_USERNAME }}" ]; then
            echo "::error::FTP_USERNAME secret is missing!"
            exit 1
          fi
          if [ -z "${{ secrets.FTP_PASSWORD }}" ]; then
            echo "::error::FTP_PASSWORD secret is missing!"
            exit 1
          fi
          echo "‚úÖ All FTP secrets verified successfully"
          echo "FTP Server: ${{ secrets.FTP_SERVER }}"
          echo "Username: ${{ secrets.FTP_USERNAME }}"

      - name: üìÇ Create remote directory structure
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: ./public_html/
          local-dir: ./dist/
          exclude: "*"
          log-level: minimal
          dangerous-clean-slate: false
          security: loose
          dry-run: false

      - name: ‚è≥ Wait for directory creation
        run: |
          echo "Waiting 5 seconds for directory structure to stabilize..."
          sleep 5

      - name: üì§ Deploy application files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist/
          server-dir: ./public_html/
          exclude: |
            **/.git/
            **/.github/
            **/.gitignore
            **/README.md
            **/node_modules/
            **/*.log
            **/.env*
            **/*.md
            **/package.json
            **/package-lock.json
            **/npm-debug.log*
            **/yarn-debug.log*
            **/yarn-error.log*
            **/.nyc_output
            **/coverage/
            **/.env
            **/.env.local
            **/.env.development.local
            **/.env.test.local
            **/.env.production.local
            **/npm-debug.log*
            **/yarn-debug.log*
            **/yarn-error.log*
            **/lerna-debug.log*
            **/.pnpm-debug.log*
            **/report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json
            **/pids
            **/*.pid
            **/*.pid.lock
            **/logs
            **/*.log
            **/yarn-error.log*
            **/yarn-debug.log*
            **/lerna-debug.log*
            **/.npm
            **/.eslintcache
            **/.stylelintcache
            **/.rpt2_cache
            **/.rts2_cache_cjs
            **/.rts2_cache_es
            **/.rts2_cache_umd
            **/.node_repl_history
            **/*.tgz
            **/.yarn-integrity
            **/.cache
            **/.parcel-cache
            **/.next
            **/out
            **/.nuxt
            **/.vuepress/dist
            **/.serverless
            **/.fusebox
            **/.dynamodb
            **/.tern-port
            **/.vscode
            **/Thumbs.db
            **/.DS_Store
          log-level: verbose
          dangerous-clean-slate: false
          security: loose
          state-name: ftp-deploy-state.json
          dry-run: false

      - name: ‚úÖ Verify deployment completion
        run: |
          echo "üöÄ Deployment completed successfully!"
          echo "üåê Your site should be live at: https://eazworld.com"
          echo "üìÅ Files deployed to: /public_html/"
          echo "‚è∞ Deployment timestamp: $(date)"
          echo "üéâ Congratulations! Your application is now live."

      - name: üîî Notify success
        if: success()
        run: |
          echo "‚úÖ Production deployment completed successfully!"
          echo "üìä Build: $GITHUB_SHA"
          echo "üë§ Deployed by: $GITHUB_ACTOR"
